AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application 
  Load Balancer with Auto Scaling Group of Amazon Linux 2023 (ami-090e0fc566929d98b) EC2 Instances 
  which host Python Flask Web Application. EC2 instances are placed within 
  WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup, 
  and allows tcp(3306) connections only within itself. RDS DB instance is placed within 
  WebServerSecurityGroup so that Database Server can communicate with Web Servers. 
  Application Load Balancer is placed within ALBSecurityGroup which allows http (80) 
  connections from anywhere. WebServerASG Auto Scaling Group is using the WebServerLT 
  Launch Template in order to spin up instances needed. WebServerLT Launch Template is 
  configured to prepare Python Flask environment on EC2, and to deploy Phonebook 
  Application on Flask Server after downloading the app code from Github repository.

Parameters:
  MyVPC:
    Description: "Choose a VPC"
    Type: AWS::EC2::VPC::Id

  KeyPair:
    Description: "Choose a key pair"
    Type: AWS::EC2::KeyPair::KeyName

  Subnets:
    Description: "Choose subnets from at least two availability zones"
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  ALBSecGr:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP for Application Load Balancer"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

  WebServerSecGr:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP for Flask Web Server and SSH for secure connection"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

  WebServerLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-090e0fc566929d98b
        InstanceType: t2.micro
        KeyName: !Ref KeyPair
        SecurityGroupIds:
          - !GetAtt WebServerSecGr.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack
        UserData:
          Fn::Base64:
            !Sub
              - |
                #!/bin/bash 
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURL}" > /home/ec2-user/dbserver.endpoint
                TOKEN="xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                FOLDER="https://$TOKEN@raw.githubusercontent.com/Yunus-Altay/Project-103-Phonebook-Application/main/" # Enter_Your_FolderPath
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/phonebook-app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/phonebook-app.py
              - MyDBURL: !GetAtt DBInstance.Endpoint.Address

  WebServerTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      VpcId: !Ref MyVPC

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecGr.GroupId
      Subnets: !Ref Subnets
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref WebServerTargetGrp
          Type: forward
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref WebServerLT
        Version: !GetAtt WebServerLT.LatestVersionNumber
      MaxSize: 3
      MinSize: 1
      TargetGroupARNs:
        - !Ref WebServerTargetGrp

  DBSecGr:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        - EC2SecurityGroupId: !GetAtt WebServerSecGr.GroupId 
      GroupDescription: "Back-end Database"

  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: phonebook-app
      DBName: clarusway_phonebook
      DBSecurityGroups:
        - !Ref DBSecGr
      DeletionProtection: false
      Engine: MySQL
      EngineVersion: 8.0.32
      MasterUsername: admin
      MasterUserPassword: clarusway_1234
      Port: 3306
      PubliclyAccessible: true

Outputs:
  WebSiteURL:
    Value: !Sub
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ALB.DNSName
    Description: Phonebook Application Load Balancer URL
